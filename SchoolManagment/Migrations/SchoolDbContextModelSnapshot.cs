// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagment.Contexts;

#nullable disable

namespace SchoolManagment.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    partial class SchoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SchoolManagment.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Degree")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinDegree")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("dept_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dept_Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SchoolManagment.Models.CrsResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Degree")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("crs_Id")
                        .HasColumnType("int");

                    b.Property<int?>("trainee_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("crs_Id");

                    b.HasIndex("trainee_Id");

                    b.ToTable("CrsResults");
                });

            modelBuilder.Entity("SchoolManagment.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SchoolManagment.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("crs_id")
                        .HasColumnType("int");

                    b.Property<int?>("dept_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("crs_id");

                    b.HasIndex("dept_Id");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("SchoolManagment.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Grade")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Imag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("dept_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dept_Id");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("SchoolManagment.Models.Course", b =>
                {
                    b.HasOne("SchoolManagment.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("dept_Id");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SchoolManagment.Models.CrsResult", b =>
                {
                    b.HasOne("SchoolManagment.Models.Course", "Course")
                        .WithMany("Results")
                        .HasForeignKey("crs_Id");

                    b.HasOne("SchoolManagment.Models.Trainee", "Trainee")
                        .WithMany("CrsResults")
                        .HasForeignKey("trainee_Id");

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("SchoolManagment.Models.Instructor", b =>
                {
                    b.HasOne("SchoolManagment.Models.Course", "Course")
                        .WithMany("Instructors")
                        .HasForeignKey("crs_id");

                    b.HasOne("SchoolManagment.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("dept_Id");

                    b.Navigation("Course");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SchoolManagment.Models.Trainee", b =>
                {
                    b.HasOne("SchoolManagment.Models.Department", "Department")
                        .WithMany("Trainees")
                        .HasForeignKey("dept_Id");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SchoolManagment.Models.Course", b =>
                {
                    b.Navigation("Instructors");

                    b.Navigation("Results");
                });

            modelBuilder.Entity("SchoolManagment.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("SchoolManagment.Models.Trainee", b =>
                {
                    b.Navigation("CrsResults");
                });
#pragma warning restore 612, 618
        }
    }
}
